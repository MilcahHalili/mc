{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/milcahcenteno/mc/pages/p/[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../../components/Layout';\nimport fetch from 'isomorphic-unfetch';\n\nvar Project = function Project(props) {\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }), __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, props.project.name), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, props.project.description), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, props.project.technologies));\n};\n\nProject.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(context) {\n    var id, res, project;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            id = context.query.id;\n            _context.next = 3;\n            return fetch(\"https://my-json-server.typicode.com/milcahhalili/projects.json/projects/\".concat(id));\n\n          case 3:\n            res = _context.sent;\n            _context.next = 6;\n            return res.json();\n\n          case 6:\n            project = _context.sent;\n            console.log(\"\".concat(id));\n            console.log(\"Fetched project: \".concat(project));\n            return _context.abrupt(\"return\", {\n              project: project\n            });\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default Project;","map":{"version":3,"sources":["/Users/milcahcenteno/mc/pages/p/[id].js"],"names":["Layout","fetch","Project","props","project","name","description","technologies","getInitialProps","context","id","query","res","json","console","log"],"mappings":";;;;;AAAA,OAAOA,MAAP,MAAmB,yBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAAC,KAAK;AAAA,SACnB,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,KAAK,CAACC,OAAN,CAAcC,IAAnB,CAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIF,KAAK,CAACC,OAAN,CAAcE,WAAlB,CALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIH,KAAK,CAACC,OAAN,CAAcG,YAAlB,CANF,CADmB;AAAA,CAArB;;AAWAL,OAAO,CAACM,eAAR;AAAA;AAAA;AAAA;AAAA;AAAA,2BAA0B,iBAAeC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAChBC,YAAAA,EADgB,GACTD,OAAO,CAACE,KADC,CAChBD,EADgB;AAAA;AAAA,mBAENT,KAAK,mFAA4ES,EAA5E,EAFC;;AAAA;AAElBE,YAAAA,GAFkB;AAAA;AAAA,mBAGFA,GAAG,CAACC,IAAJ,EAHE;;AAAA;AAGlBT,YAAAA,OAHkB;AAKxBU,YAAAA,OAAO,CAACC,GAAR,WAAeL,EAAf;AACAI,YAAAA,OAAO,CAACC,GAAR,4BAAgCX,OAAhC;AANwB,6CAQjB;AAAEA,cAAAA,OAAO,EAAPA;AAAF,aARiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA1B;;AAAA;AAAA;AAAA;AAAA;;AAWA,eAAeF,OAAf","sourcesContent":["import Layout from '../../components/Layout';\nimport fetch from 'isomorphic-unfetch';\n\nconst Project = props => (\n  <Layout>\n    <div>\n      \n    </div>\n    <h1>{props.project.name}</h1>\n    <p>{props.project.description}</p>\n    <p>{props.project.technologies}</p>\n  </Layout>\n);\n\nProject.getInitialProps = async function(context) {\n  const { id } = context.query;\n  const res = await fetch(`https://my-json-server.typicode.com/milcahhalili/projects.json/projects/${id}`);\n  const project = await res.json();\n  \n  console.log(`${id}`)\n  console.log(`Fetched project: ${project}`);\n\n  return { project };\n};\n\nexport default Project;"]},"metadata":{},"sourceType":"module"}